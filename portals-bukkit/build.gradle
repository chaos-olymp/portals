plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
    id 'kr.entree.spigradle' version '2.2.4'
}

group 'de.chaosolymp'
version rootProject.version

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

repositories {
    mavenCentral()
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
    maven { url "https://maven.enginehub.org/repo/" }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/public/' }
}

dependencies {
    implementation project(":portals-core")
    compileOnly "org.spigotmc:spigot-api:1.18-R0.1-SNAPSHOT"
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.3'

    testImplementation 'com.github.seeseemelk:MockBukkit-v1.17:1.10.4'
    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

shadowJar {
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    relocate('kotlin' as String, project.group + '.portals.bukkit.libs.kotlin' as String)
    relocate('org.intellij.lang.annotations' as String, project.group + '.portals.bukkit.libs.annotations.intellij' as String)
    relocate('org.jetbrains.annotations' as String, project.group + '.portals.bukkit.libs.annotations.jetbrains' as String)
}

test {
    useJUnitPlatform()
}

// Workaround for non-legacy PaperMC downloads
// See issue https://github.com/spigradle/spigradle/issues/71
downloadPaper {
    //noinspection GroovyAssignabilityCheck
    source = 'https://papermc.io/api/v2/projects/paper/versions/1.18/builds/36/downloads/paper-1.18-36.jar'
}

runSpigot {
    jvmArgs '-Xmx512M'
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.WARN)
    inputs.property "version", project.version
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}

artifacts {
    archives shadowJar
}