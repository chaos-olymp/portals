plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'com.github.johnrengelman.shadow'
    id 'org.jetbrains.kotlin.kapt'
}

group 'de.chaosolymp'
version rootProject.version

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.6.0'
    compileOnly project(":portals-annotations")
    kapt project(":portals-annotation-processor")

    testImplementation 'org.jetbrains.kotlin:kotlin-test:1.5.31'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation 'com.google.guava:guava:21.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

shadowJar {
    project.configurations.implementation.canBeResolved = true
    configurations = [project.configurations.implementation]
    relocate('kotlin', project.group + '.portals.core.libs.kotlin')
    relocate('org.intellij.lang.annotations', project.group + '.portals.core.libs.annotations.intellij')
    relocate('org.jetbrains.annotations', project.group + '.portals.core.libs.annotations.jetbrains')
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated/source/kaptKotlin/"
        }
    }
}


artifacts {
    archives shadowJar
}

processResources {
    duplicatesStrategy(DuplicatesStrategy.WARN)
    inputs.property "version", project.version
    from(sourceSets.main.resources.srcDirs) {
        include 'plugin.yml'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'plugin.yml'
    }
}